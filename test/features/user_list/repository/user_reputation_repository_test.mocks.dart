// Mocks generated by Mockito 5.4.5 from annotations
// in sof_user_list/test/features/user_list/repository/user_reputation_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:sof_user_list/features/user_list/model/user_model.dart' as _i9;
import 'package:sof_user_list/features/user_list/service/bookmark_sqflite_service.dart'
    as _i7;
import 'package:sof_user_list/features/user_list/service/user_list_service.dart'
    as _i2;
import 'package:sof_user_list/network/result.dart' as _i4;
import 'package:sqflite/sqflite.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserListService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserListService extends _i1.Mock implements _i2.UserListService {
  MockUserListService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.Response>> getListUser({
    required int? page,
    required int? pagesize,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getListUser, [], {
              #page: page,
              #pagesize: pagesize,
            }),
            returnValue: _i3.Future<_i4.Result<_i5.Response>>.value(
              _i6.dummyValue<_i4.Result<_i5.Response>>(
                this,
                Invocation.method(#getListUser, [], {
                  #page: page,
                  #pagesize: pagesize,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Response>>);
}

/// A class which mocks [BookmarkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookmarkService extends _i1.Mock implements _i7.BookmarkService {
  MockBookmarkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set database(_i8.Database? _database) => super.noSuchMethod(
    Invocation.setter(#database, _database),
    returnValueForMissingStub: null,
  );

  @override
  String get databaseName =>
      (super.noSuchMethod(
            Invocation.getter(#databaseName),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#databaseName),
            ),
          )
          as String);

  @override
  String get userTable =>
      (super.noSuchMethod(
            Invocation.getter(#userTable),
            returnValue: _i6.dummyValue<String>(
              this,
              Invocation.getter(#userTable),
            ),
          )
          as String);

  @override
  _i3.Future<void> open() =>
      (super.noSuchMethod(
            Invocation.method(#open, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> close() =>
      (super.noSuchMethod(
            Invocation.method(#close, []),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<int?> insert(_i9.UserModel? user) =>
      (super.noSuchMethod(
            Invocation.method(#insert, [user]),
            returnValue: _i3.Future<int?>.value(),
          )
          as _i3.Future<int?>);

  @override
  _i3.Future<List<Map<String, Object?>>?> getList({List<String>? columns}) =>
      (super.noSuchMethod(
            Invocation.method(#getList, [], {#columns: columns}),
            returnValue: _i3.Future<List<Map<String, Object?>>?>.value(),
          )
          as _i3.Future<List<Map<String, Object?>>?>);

  @override
  _i3.Future<int?> delete(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i3.Future<int?>.value(),
          )
          as _i3.Future<int?>);
}
